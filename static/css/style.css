* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* CSS 변수 정의 */
:root {
    --primary: #007bff;
    --primary-light: #7e57c2;
    --primary-dark: #4527a0;
    --secondary: #6c757d;
    --success: #28a745;
    --danger: #dc3545;
    --warning: #ffc107;
    --info: #17a2b8;
    --light: #f5f7fa;
    --dark: #343a40;
    --gray-100: #f8f9fa;
    --gray-200: #e9ecef;
    --gray-300: #dee2e6;
    --gray-400: #ced4da;
    --gray-500: #adb5bd;
    --gray-600: #6c757d;
    --gray-700: #495057;
    --gray-800: #343a40;
    --gray-900: #212529;
    --border-radius: 4px;
    --box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12);
    --transition: all 0.2s ease-in-out;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    line-height: 1.6;
    padding: 0;
    margin: 0;
    background-color: var(--light);
    color: var(--gray-800);
    height: 100vh;
    overflow: hidden;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    background-color: white;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
}

.timer {
    background: white;
    padding: 0.75rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    color: var(--primary);
    text-align: center;
    margin-bottom: 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.main-container {
    display: flex;
    height: 100vh;
    overflow: hidden;
}

.sidebar {
    width: 300px;
    background-color: white;
    border-left: 1px solid var(--gray-200);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    position: fixed;
    right: 0;
    top: 0;
    bottom: 0;
    box-shadow: -2px 0 5px rgba(0, 0, 0, 0.05);
    font-size: 0.75rem;
}

.main-content {
    flex: 1;
    padding: 2rem;
    margin-right: 300px;
    margin-left: 0;
    overflow-y: auto;
    background-color: var(--gray-100);
    min-height: 100vh;
}

.image-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 20px;
    padding: 20px;
    width: 100%;
}

canvas {
    max-width: 100%;
    height: auto;
    object-fit: contain;
}

#imageCanvas {
    align-self: center;
    margin-bottom: 20px;
}

.controls {
    margin-top: 20px;
}

.fracture-buttons {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin: 1rem 0;
    padding: 0.75rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    position: relative;
    z-index: 1000;
}

.fracture-btn {
    padding: 0.5rem 0.75rem;
    border: 2px solid;
    border-radius: 6px;
    font-weight: 600;
    transition: all 0.2s ease;
    text-align: left;
    font-size: 0.8rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    width: 100%;
    background-color: white;
}

#ambiguous {
    border-color: #2e7d32;
    color: #2e7d32;
    background-color: #e8f5e9;
}

#simple {
    border-color: #1565c0;
    color: #1565c0;
    background-color: #e3f2fd;
}

#comminuted {
    border-color: #c62828;
    color: #c62828;
    background-color: #ffebee;
}

#noFracture {
    border-color: #757575;
    color: #757575;
    background-color: #f5f5f5;
}

.fracture-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    filter: brightness(0.95);
}

.image-list {
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 1rem;
    max-height: 150px;
    overflow-y: auto;
}

.image-item {
    padding: 0.5rem 0.75rem;
    margin: 0;
    border-bottom: 1px solid var(--gray-200);
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    color: var(--gray-700);
}

.image-item:last-child {
    border-bottom: none;
}

.image-item.active {
    background-color: var(--primary);
    color: white;
}

.image-item:hover:not(.active) {
    background-color: var(--gray-100);
}

.image-item.unlabeled:not(.active) {
    background-color: rgba(255, 0, 0, 0.2);  /* 빨간색 배경, 투명도 20% */
}

.image-item.unlabeled:hover:not(.active) {
    background-color: rgba(255, 0, 0, 0.3);  /* 호버 시 더 진한 빨간색 */
}

.navigation-buttons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    background: white;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.instruction-text {
    font-size: 0.9rem;
    color: var(--gray-600);
    background: var(--gray-100);
    padding: 0.5rem 1rem;
    border-radius: 4px;
    text-align: center;
    flex-grow: 1;
    margin: 0 1rem;
}

.nav-btn {
    padding: 8px 15px;
    background-color: var(--primary);
    color: white;
    text-decoration: none;
    border-radius: 4px;
    text-align: center;
    min-width: 80px;
}

.nav-btn:hover {
    opacity: 0.8;
}

.id-buttons {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    margin-top: 30px;
}

.id-button {
    display: block;
    padding: 20px;
    background-color: #4CAF50;
    color: white;
    text-decoration: none;
    text-align: center;
    border-radius: 5px;
    font-size: 18px;
}

.id-button:hover {
    opacity: 0.8;
}

h1, h2, h3 {
    margin-bottom: 15px;
}

.sidebar-section-title {
    margin-top: 30px;
    border-top: 1px solid #ddd;
    padding-top: 15px;
}

.fracture-buttons-sidebar {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin: 15px 0;
}

.fracture-buttons-sidebar .fracture-btn {
    width: 100%;
    text-align: left;
    padding: 10px;
}

.bbox-controls {
    margin-top: auto;
    padding-top: 1rem;
    border-top: 1px solid var(--gray-200);
}

.bbox-controls button {
    width: 100%;
    padding: 0.5rem;
    margin-bottom: 0.5rem;
    border: none;
    border-radius: 6px;
    background-color: white;
    color: var(--gray-700);
    border: 1px solid var(--gray-300);
    transition: all 0.2s ease;
    font-size: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

.bbox-controls button:hover {
    background-color: var(--gray-100);
    transform: translateY(-1px);
}

.bbox-controls button.delete-last {
    color: var(--danger);
    border-color: var(--danger);
}

.bbox-controls button.delete-all {
    color: white;
    background-color: var(--danger);
    border-color: var(--danger);
}

/* Progress Bar 스타일 */
.progress-container {
    background: white;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    margin-bottom: 1rem;
}

.progress-bar-container {
    height: 8px;
    background-color: var(--gray-200);
    border-radius: 4px;
    overflow: hidden;
    margin: 1rem 0;
}

.progress-bar {
    height: 100%;
    background-color: var(--primary);
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.progress-info {
    display: flex;
    justify-content: space-between;
    font-size: 0.9em;
    color: #555;
}

.labeled-marker {
    margin-left: 5px;
    color: #4CAF50;
    font-weight: bold;
}

.debug-info {
    display: none;
    background: rgba(0, 0, 0, 0.8);
    color: #fff;
    padding: 10px;
    border-radius: 4px;
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 12px;
    font-family: monospace;
    z-index: 1000;
}

.debug-info p {
    margin: 5px 0;
    white-space: nowrap;
}

h3 {
    font-size: 0.9rem;
    margin-bottom: 0.75rem;
}

function updateCanvasScale() {
    const container = canvas.parentElement;
    const containerWidth = container.clientWidth;
    const containerHeight = container.clientHeight;
    
    // 이미지의 원래 크기
    const imgWidth = img.width;
    const imgHeight = img.height;
    
    // 컨테이너에 맞는 크기 계산
    let newWidth = imgWidth;
    let newHeight = imgHeight;
    
    if (scale === 2) {
        // 확대 시 이미지 width를 컨테이너 width에 맞춤
        newWidth = containerWidth;
        newHeight = (containerWidth * imgHeight) / imgWidth;
    } else {
        // 축소 상태일 때 컨테이너에 맞게 조정
        const containerRatio = containerWidth / containerHeight;
        const imageRatio = imgWidth / imgHeight;
        
        if (imageRatio > containerRatio) {
            newWidth = containerWidth - 40;
            newHeight = (containerWidth - 40) / imageRatio;
        } else {
            newHeight = containerHeight - 40;
            newWidth = (containerHeight - 40) * imageRatio;
        }
    }
    
    // 캔버스 크기 업데이트
    canvas.style.width = newWidth + 'px';
    canvas.style.height = newHeight + 'px';
    
    // 스케일 비율 업데이트
    updateScaleRatio();
    updateDebugInfo();
    redrawCanvas();
}

.sidebar-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 0.5rem 0;
    padding: 0.75rem;
    background: white;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.sidebar-nav .nav-btn {
    padding: 0.5rem 0.75rem;
    font-size: 0.75rem;
    min-width: 60px;
}

.sidebar-nav span {
    font-size: 0.75rem;
    color: var(--gray-700);
} 